RULE_0_IPV4ADDR="2.212.4.22"
RULE_0_PORTSETS="1024-1151 2048-2175 3072-3199 4096-4223 5120-5247 6144-6271 7168-7295 8192-8319 9216-9343 10240-10367 11264-11391 12288-12415 13312-13439 14336-14463 15360-15487 16384-16511 17408-17535 18432-18559 19456-19583 20480-20607 21504-21631 22528-22655 23552-23679 24576-24703 25600-25727 26624-26751 27648-27775 28672-28799 29696-29823 30720-30847 31744-31871 32768-32895 33792-33919 34816-34943 35840-35967 36864-36991 37888-38015 38912-39039 39936-40063 40960-41087 41984-42111 43008-43135 44032-44159 45056-45183 46080-46207 47104-47231 48128-48255 49152-49279 50176-50303 51200-51327 52224-52351 53248-53375 54272-54399 55296-55423 56320-56447 57344-57471 58368-58495 59392-59519 60416-60543 61440-61567 62464-62591 63488-63615 64512-64639"
k=0
cfg=kdb


DONT_SNAT_TO="0"
foo(){
            local portcount=0                                                    
            local allports=""                                                    
            for portset in $(eval "echo \$RULE_${k}_PORTSETS"); do               
                local startport=${portset%-*}                                    
                local endport=${portset#*-}                                      
                                                                                 
                for x in $(seq "$startport" "$endport"); do                      
                    case " $DONT_SNAT_TO " in                                    
                        *" $x "*)                                                
                            # Skip this port                                     
                            ;;                                                   
                        *)                                                       
                            allports="${allports}${portcount} : ${x}, "         
                            portcount=$((portcount + 1))
                            ;;                                                   
                    esac                                                         
                done                                                             
            done                                                                 
            allports=${allports%??}

cat << EOF >/tmp/mapet.nft
#!/usr/sbin/nft -f

destroy table inet mapet

table inet mapet {
	chain srcnat {
		type nat hook postrouting priority 0; policy accept;
		ip protocol {tcp, udp, icmp} oifname map-$cfg snat ip to $(eval echo \$RULE_${k}_IPV4ADDR) : numgen inc mod $portcount map { $allports }
	}
}
EOF

}

foo
